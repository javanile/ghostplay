#!/bin/sh

ghostplay_cleanup() { :; }

ghostplay_sigint_handler() {
  exit 1
}

ghostplay_exit_handler() {
  ghostplay_cleanup
}

trap 'ghostplay_sigint_handler' INT
trap 'ghostplay_exit_handler' EXIT

GP_USERNAME=$(whoami)
GP_HOSTNAME=$(hostname)

eval "$(printf "GP_LF='\\012' GP_ESC='\\033'")"

# shellcheck disable=SC2034
{
  GP_RESET="${GP_ESC}[0m"
  GP_BOLD="${GP_ESC}[1m" GP_UNDERLINE="${GP_ESC}[4m" GP_REVERSE="${GP_ESC}[7m"
  GP_BLACK="${GP_ESC}[30m"   GP_BG_BLACK="${GP_ESC}[40m"
  GP_RED="${GP_ESC}[31m"     GP_BG_RED="${GP_ESC}[41m"
  GP_GREEN="${GP_ESC}[32m"   GP_BG_GREEN="${GP_ESC}[42m"
  GP_YELLOW="${GP_ESC}[33m"  GP_BG_YELLOW="${GP_ESC}[43m"
  GP_BLUE="${GP_ESC}[34m"    GP_BG_BLUE="${GP_ESC}[44m"
  GP_MAGENTA="${GP_ESC}[35m" GP_BG_MAGENTA="${GP_ESC}[45m"
  GP_CYAN="${GP_ESC}[36m"    GP_BG_CYAN="${GP_ESC}[46m"
  GP_WHITE="${GP_ESC}[37m"   GP_BG_WHITE="${GP_ESC}[47m"
}

ghostplay_sleep() {
  sleep "$1"
}

ghostplay_puts() {
  printf '%s' "$*"
}

ghostplay_prompt() {
  ghostplay_before_prompt
  ghostplay_puts "${GP_GREEN}${GP_USERNAME}@${GP_HOSTNAME}" \
          "${GP_MAGENTA}${PWD##*/}${GP_RESET}\$ "
  ghostplay_after_prompt
}

ghostplay_before_prompt() {
  :
}

ghostplay_after_prompt() {
  ghostplay_sleep 0.5
}

ghostplay_input() {
  if [ $# -lt 2 ]; then
    ghostplay_input "${1%"${1#?}"}" "${1#?}"
  else
    if [ "$1" = "" ]; then
      echo
    else
      ghostplay_type "$1"
      ghostplay_input "${2%"${2#?}"}" "${2#?}"
    fi
  fi
}

ghostplay_type() {
  ghostplay_before_type
  ghostplay_puts "$1"
  ghostplay_after_type
}

ghostplay_before_type() {
  ghostplay_sleep 0.02
}

ghostplay_after_type() {
  :
}

ghostplay_command_and_exec() {
  ghostplay_command "$1"
  ghostplay_exec "$1"
}

ghostplay_exec() {
  eval "$1"
}

ghostplay_command() {
  ghostplay_prompt
  ghostplay_input "$1"
}

ghostplay_line() {
  case $ghostplay_mode in
    "") ghostplay_command_and_exec "$1" ;;
    *) ghostplay_buf="$ghostplay_buf${ghostplay_buf:+$GP_LF}$1" ;;
  esac
}

ghostplay_directive_batch() {
  ghostplay_mode="batch"
}

ghostplay_directive_silent() {
  ghostplay_mode="silent"
}

ghostplay_directive_fake() {
  ghostplay_mode="fake"
}

ghostplay_directive_flush() {
  [ "$ghostplay_buf" ] || return 0
  case $ghostplay_mode in
    batch) ghostplay_command_and_exec "$ghostplay_buf" ;;
    silent) ghostplay_exec "$ghostplay_buf" ;;
    fake) ghostplay_command "$ghostplay_buf" ;;
  esac
  ghostplay_buf=""
}

ghostplay_directive_end() {
  ghostplay_directive_flush
  ghostplay_mode=""
}

ghostplay_directive_sleep() {
  ghostplay_sleep "$1"
}

ghostplay_mode=""
ghostplay_buf=""

while IFS= read -r ghostplay_line || [ "$ghostplay_line" ]; do
  ghostplay_work=$ghostplay_line

  while [ "$ghostplay_work" != "${ghostplay_work# }" ]; do
    ghostplay_work=${ghostplay_work# }
  done

  case $ghostplay_work in
    "# ghostplay "*) eval "ghostplay_directive_${ghostplay_work#"# ghostplay "}" ;;
    "" | "#"*) ;;
    *) ghostplay_line "$ghostplay_line" ;;
  esac
done < "$1"

# workaround: seq2gif is lose the last line.
echo
